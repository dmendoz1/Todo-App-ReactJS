{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/todo-me/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/todo-me/src/App.js\";\nimport React, { useState } from 'react';\nimport TodoList from './components/TodoList';\nimport NewTodoSection from './components/NewTodoSection';\n\nconst TodoApp = _ => {\n  const _useState = useState({\n    todo: '',\n    completed: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoItem = _useState2[0],\n        setTodoItem = _useState2[1];\n\n  const myLocalStorageItems = JSON.parse(localStorage.getItem('myTodoListInLocalStorage'));\n\n  const _useState3 = useState(myLocalStorageItems || []),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todoList = _useState4[0],\n        setTodoList = _useState4[1];\n\n  const _useState5 = useState({\n    isThereError: false,\n    errorMsg: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setErrorState = _useState6[1];\n\n  React.useEffect(() => {\n    console.log(todoList);\n    console.log('-----------');\n    localStorage.setItem('myTodoListInLocalStorage', JSON.stringify(todoList));\n  }, [todoList]);\n  const completedTodoNum = todoList.filter((todoItem, index) => todoItem.completed).length;\n  const pendingTodoNum = todoList.length - completedTodoNum;\n  return React.createElement(\"div\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"todo-title centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" Tasks \"), React.createElement(NewTodoSection, {\n    todoItem: todoItem,\n    setTodoItem: setTodoItem,\n    setTodoList: setTodoList,\n    todoList: todoList,\n    setErrorState: setErrorState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), error.isThereError && React.createElement(\"span\", {\n    className: \"error-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, error.errorMsg), React.createElement(TodoList, {\n    todoList: todoList,\n    setTodoList: setTodoList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"tracker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Completed: \", completedTodoNum), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Pending: \", pendingTodoNum), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Total number of tasks in queue: \", todoList.length)));\n};\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/todo-me/src/App.js"],"names":["React","useState","TodoList","NewTodoSection","TodoApp","_","todo","completed","todoItem","setTodoItem","myLocalStorageItems","JSON","parse","localStorage","getItem","todoList","setTodoList","isThereError","errorMsg","error","setErrorState","useEffect","console","log","setItem","stringify","completedTodoNum","filter","index","length","pendingTodoNum"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAGA,MAAMC,OAAO,GAAGC,CAAC,IAAI;AAAA,oBACaJ,QAAQ,CAAC;AACvCK,IAAAA,IAAI,EAAG,EADgC;AAEvCC,IAAAA,SAAS,EAAE;AAF4B,GAAD,CADrB;AAAA;AAAA,QACZC,QADY;AAAA,QACFC,WADE;;AAKnB,QAAMC,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,0BAArB,CAAX,CAA5B;;AALmB,qBAMab,QAAQ,CAAES,mBAAmB,IAAI,EAAzB,CANrB;AAAA;AAAA,QAMZK,QANY;AAAA,QAMFC,WANE;;AAAA,qBAOYf,QAAQ,CAAC;AACtCgB,IAAAA,YAAY,EAAE,KADwB;AAEtCC,IAAAA,QAAQ,EAAE;AAF4B,GAAD,CAPpB;AAAA;AAAA,QAOZC,KAPY;AAAA,QAOLC,aAPK;;AAanBpB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAV,IAAAA,YAAY,CAACW,OAAb,CAAqB,0BAArB,EAAiDb,IAAI,CAACc,SAAL,CAAeV,QAAf,CAAjD;AACD,GAJD,EAIG,CAACA,QAAD,CAJH;AAOA,QAAMW,gBAAgB,GAAGX,QAAQ,CAACY,MAAT,CAAgB,CAACnB,QAAD,EAAWoB,KAAX,KAAqBpB,QAAQ,CAACD,SAA9C,EAAyDsB,MAAlF;AACA,QAAMC,cAAc,GAAGf,QAAQ,CAACc,MAAT,GAAkBH,gBAAzC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAElB,QADZ;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,WAAW,EAAEO,WAHf;AAIE,IAAA,QAAQ,EAAED,QAJZ;AAKE,IAAA,aAAa,EAAEK,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGD,KAAK,CAACF,YAAN,IAAsB;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,KAAK,CAACD,QAAnC,CATzB,EAUG,oBAAC,QAAD;AACC,IAAA,QAAQ,EAAEH,QADX;AAEC,IAAA,WAAW,EAAEC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,EAcE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeU,gBAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaI,cAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAoCf,QAAQ,CAACc,MAA7C,CAHF,CAdF,CADF;AAsBD,CA5CD;;AA8CA,eAAezB,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport TodoList from './components/TodoList';\nimport NewTodoSection from './components/NewTodoSection';\n\n\nconst TodoApp = _ => {\n  const [todoItem, setTodoItem] = useState({\n    todo : '',\n    completed: false\n  });\n  const myLocalStorageItems = JSON.parse(localStorage.getItem('myTodoListInLocalStorage'))\n  const [todoList, setTodoList] = useState( myLocalStorageItems || []);\n  const [error, setErrorState] = useState({\n    isThereError: false,\n    errorMsg: ''\n  });\n\n\n  React.useEffect(() => {\n    console.log(todoList);\n    console.log('-----------')\n    localStorage.setItem('myTodoListInLocalStorage', JSON.stringify(todoList));\n  }, [todoList]);\n\n\n  const completedTodoNum = todoList.filter((todoItem, index) => todoItem.completed).length;\n  const pendingTodoNum = todoList.length - completedTodoNum;\n  return (\n    <div className=\"todo-container\">\n      <h1 className=\"todo-title centered\"> Tasks </h1>\n      <NewTodoSection\n        todoItem={todoItem}\n        setTodoItem={setTodoItem}\n        setTodoList={setTodoList}\n        todoList={todoList}\n        setErrorState={setErrorState}\n      />\n      {error.isThereError && <span className=\"error-msg\">{error.errorMsg}</span>}\n       <TodoList\n        todoList={todoList}\n        setTodoList={setTodoList}\n      />\n      <div className=\"tracker\">\n        <p>Completed: {completedTodoNum}</p>\n        <p>Pending: {pendingTodoNum}</p>\n        <p>Total number of tasks in queue: {todoList.length}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}