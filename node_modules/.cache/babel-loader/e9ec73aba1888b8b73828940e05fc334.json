{"ast":null,"code":"var _jsxFileName = \"/Users/dmendoza/Documents/react-projects/todo-me/src/components/Todo.js\";\nimport React from 'react';\n\nconst Todo = ({\n  idx,\n  todoList,\n  setTodoList,\n  todoItem\n}) => {\n  const removeTodo = _ => {\n    const newTodoList = todoList.filter((todo, index) => {\n      return index !== idx;\n    });\n    setTodoList(newTodoList);\n  };\n\n  const editTodo = e => {\n    console.log(e.currentTarget.parentNode[0]);\n  };\n\n  const completeTodo = _ => {\n    const newCompletedState = todoList.map((todoItem, index) => {\n      if (index === idx) {\n        return {\n          todo: todoItem.todo,\n          completed: !todoItem.completed\n        };\n      }\n\n      return todoItem;\n    });\n    setTodoList(newCompletedState);\n  };\n\n  return React.createElement(\"div\", {\n    className: todoItem.completed ? 'todo-item completed-todo' : 'todo-item',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, todoItem.todo, React.createElement(\"div\", {\n    className: \"remove-btn\",\n    onClick: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"remove\"), React.createElement(\"div\", {\n    className: \"editBtn\",\n    onClick: e => editTodo(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"edit\"), React.createElement(\"div\", {\n    className: \"completeBtn\",\n    onClick: completeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, todoItem.completed ? 'completed' : 'complete'));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/todo-me/src/components/Todo.js"],"names":["React","Todo","idx","todoList","setTodoList","todoItem","removeTodo","_","newTodoList","filter","todo","index","editTodo","e","console","log","currentTarget","parentNode","completeTodo","newCompletedState","map","completed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAA4C;AACvD,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACtB,UAAMC,WAAW,GAAGL,QAAQ,CAACM,MAAT,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,aAAOA,KAAK,KAAKT,GAAjB;AACD,KAFmB,CAApB;AAGAE,IAAAA,WAAW,CAACI,WAAD,CAAX;AAED,GAND;;AAQA,QAAMI,QAAQ,GAAGC,CAAC,IAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAF,CAAgBC,UAAhB,CAA2B,CAA3B,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGX,CAAC,IAAI;AACtB,UAAMY,iBAAiB,GAAGhB,QAAQ,CAACiB,GAAT,CAAc,CAACf,QAAD,EAAWM,KAAX,KAAqB;AAC3D,UAAGA,KAAK,KAAKT,GAAb,EAAkB;AAChB,eAAO;AACLQ,UAAAA,IAAI,EAAEL,QAAQ,CAACK,IADV;AAELW,UAAAA,SAAS,EAAE,CAAChB,QAAQ,CAACgB;AAFhB,SAAP;AAID;;AAED,aAAOhB,QAAP;AACD,KATyB,CAA1B;AAUAD,IAAAA,WAAW,CAACe,iBAAD,CAAX;AACH,GAZD;;AAcA,SACE;AAAK,IAAA,SAAS,EAAEd,QAAQ,CAACgB,SAAT,GAAqB,0BAArB,GAAkD,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QAAQ,CAACK,IADZ,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAEJ,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAGO,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEK,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDb,QAAQ,CAACgB,SAAT,GAAqB,WAArB,GAAkC,UAAvF,CAJF,CADF;AAQD,CAnCD;;AAqCA,eAAepB,IAAf","sourcesContent":["import React from 'react';\n\nconst Todo = ({idx, todoList, setTodoList, todoItem}) => {\n  const removeTodo = _ => {\n    const newTodoList = todoList.filter( (todo, index) => {\n      return index !== idx\n    });\n    setTodoList(newTodoList);\n\n  }\n\n  const editTodo = e => {\n    console.log(e.currentTarget.parentNode[0])\n  }\n\n  const completeTodo = _ => {\n      const newCompletedState = todoList.map( (todoItem, index) => {\n        if(index === idx) {\n          return {\n            todo: todoItem.todo,\n            completed: !todoItem.completed\n          }\n        }\n\n        return todoItem;\n      })\n      setTodoList(newCompletedState);\n  }\n\n  return (\n    <div className={todoItem.completed ? 'todo-item completed-todo' : 'todo-item'} >\n      {todoItem.todo}\n      <div className=\"remove-btn\" onClick={removeTodo}>remove</div>\n      <div className=\"editBtn\" onClick={(e) => editTodo(e)}>edit</div>\n      <div className=\"completeBtn\" onClick={completeTodo}>{todoItem.completed ? 'completed': 'complete'}</div>\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}