{"ast":null,"code":"var _jsxFileName = \"/Users/dmendoza/Documents/react-projects/todo-me/src/components/NewTodoSection.js\";\nimport React from 'react';\nimport ErrorComponent from './ErrorComponent';\n\nconst SubmitBtn = ({\n  todoItem,\n  setTodoItem,\n  setTodoList,\n  todoList\n}) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (todoItem.todo !== '') {\n      const newTodoList = [...todoList, todoItem];\n      setTodoList(newTodoList);\n      setTodoItem({\n        todo: '',\n        completed: false\n      });\n    } else {\n      debugger;\n      return React.createElement(ErrorComponent, {\n        error: \"new task cannot be empty!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const todoItm = {\n      todo: e.target.value,\n      completed: false\n    };\n    setTodoItem(todoItm);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleInputChange,\n    className: \"todo-input\",\n    value: todoItem.todo,\n    placeholder: \"What needs to be done?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"submit-todo-btn btn\",\n    type: \"submit\",\n    value: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(ErrorComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nexport default SubmitBtn;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/todo-me/src/components/NewTodoSection.js"],"names":["React","ErrorComponent","SubmitBtn","todoItem","setTodoItem","setTodoList","todoList","handleSubmit","e","preventDefault","todo","newTodoList","completed","handleInputChange","todoItm","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AACpE,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGN,QAAQ,CAACO,IAAT,KAAkB,EAArB,EAAyB;AACvB,YAAMC,WAAW,GAAG,CAAC,GAAGL,QAAJ,EAAcH,QAAd,CAApB;AACAE,MAAAA,WAAW,CAACM,WAAD,CAAX;AACAP,MAAAA,WAAW,CAAC;AACRM,QAAAA,IAAI,EAAE,EADE;AAERE,QAAAA,SAAS,EAAE;AAFH,OAAD,CAAX;AAID,KAPD,MAOO;AACL;AACA,aAAQ,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,2BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD;AACF,GAbD;;AAeA,QAAMC,iBAAiB,GAAGL,CAAC,IAAI;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMK,OAAO,GAAG;AACdJ,MAAAA,IAAI,EAAGF,CAAC,CAACO,MAAF,CAASC,KADF;AAEdJ,MAAAA,SAAS,EAAG;AAFE,KAAhB;AAIAR,IAAAA,WAAW,CAACU,OAAD,CAAX;AACD,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAIM,iBAFd;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,KAAK,EAAEV,QAAQ,CAACO,IAJlB;AAKE,IAAA,WAAW,EAAC,wBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CA5CD;;AA8CA,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport ErrorComponent from './ErrorComponent';\n\nconst SubmitBtn = ({todoItem, setTodoItem, setTodoList, todoList}) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(todoItem.todo !== '') {\n      const newTodoList = [...todoList, todoItem];\n      setTodoList(newTodoList);\n      setTodoItem({\n          todo: '',\n          completed: false\n      });\n    } else {\n      debugger;\n      return  <ErrorComponent error='new task cannot be empty!'/>;\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const todoItm = {\n      todo : e.target.value,\n      completed : false\n    }\n    setTodoItem(todoItm)\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange = {handleInputChange}\n          className=\"todo-input\"\n          value={todoItem.todo}\n          placeholder=\"What needs to be done?\"\n        />\n        <input\n          className=\"submit-todo-btn btn\"\n          type=\"submit\"\n          value=\"submit\"\n        />\n      </form>\n      <ErrorComponent />\n    </div>\n  )\n}\n\nexport default SubmitBtn;\n"]},"metadata":{},"sourceType":"module"}