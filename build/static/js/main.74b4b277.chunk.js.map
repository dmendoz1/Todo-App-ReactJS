{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/NewTodoSection.js","App.js","index.js"],"names":["Todo","_ref","idx","todoList","setTodoList","todoItem","react_default","a","createElement","className","htmlFor","completed","id","type","checked","onChange","_","newCompletedState","map","index","todo","onClick","newTodoList","filter","TodoList","length","components_Todo","key","SubmitBtn","setTodoItem","setErrorState","onSubmit","e","preventDefault","concat","Object","toConsumableArray","isThereError","errorMsg","todoItm","target","value","placeholder","TodoApp","_useState","useState","_useState2","slicedToArray","myLocalStorageItems","JSON","parse","localStorage","getItem","_useState3","_useState4","_useState5","_useState6","error","React","useEffect","setItem","stringify","completedTodoNum","pendingTodoNum","NewTodoSection","components_TodoList","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.74b4b277.chunk.js","sourcesContent":["import React from 'react';\n\nconst Todo = ({idx, todoList, setTodoList, todoItem}) => {\n  const removeTodo = _ => {\n    const newTodoList = todoList.filter( (todo, index) => {\n      return index !== idx\n    });\n    setTodoList(newTodoList);\n\n  }\n\n  const completeTodo = _ => {\n      const newCompletedState = todoList.map( (todoItem, index) => {\n        if(index === idx) {\n          return {\n            todo: todoItem.todo,\n            completed: !todoItem.completed\n          }\n        }\n\n        return todoItem;\n      })\n      setTodoList(newCompletedState);\n  }\n\n  return (\n    <div className=\"todo-item-wrapper\">\n      <label htmlFor={'todoItem' + idx} className={todoItem.completed ? 'completed-checkbox completed' : 'completed-checkbox'}>\n        <input id={'todoItem' + idx} type=\"checkbox\" className=\"completeBtn\" checked={todoItem.completed ? true: false} onChange={completeTodo} />\n        <span className=\"checkmark\"></span>\n      </label>\n      <div className={todoItem.completed ? 'todo-item completed-todo' : 'todo-item'} >\n        {todoItem.todo}\n      </div>\n        <button className=\"remove-btn\" onClick={removeTodo}>remove</button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({todoList, setTodoList}) => {\n  if(todoList.length) {\n    return (\n      todoList.map((todoItem, idx) => {\n        return (\n          <Todo\n            todoItem={todoItem}\n            key={idx}\n            idx={idx}\n            todoList={todoList}\n            setTodoList={setTodoList}\n          />\n        )\n      })\n    )}\n    else {\n      return (\n        <div className=\"no-todos-warning\">\n          <p>You currently have no tasks, enter a new one above...</p>\n        </div>\n      )\n    }\n}\nexport default TodoList\n","import React from 'react';\n\nconst SubmitBtn = ({todoItem, setTodoItem, setTodoList, todoList, setErrorState}) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(todoItem.todo !== '') {\n      const newTodoList = [...todoList, todoItem];\n      setTodoList(newTodoList);\n      setTodoItem({\n          todo: '',\n          completed: false\n      });\n      setErrorState({\n        isThereError: false,\n        errorMsg: ''\n      })\n    } else {\n      setErrorState({\n        isThereError: true,\n        errorMsg: 'Task field cannot be left empty!'\n      })\n    }\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const todoItm = {\n      todo : e.target.value,\n      completed : false\n    }\n    setTodoItem(todoItm)\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange = {handleInputChange}\n          className=\"todo-input\"\n          value={todoItem.todo}\n          placeholder=\"What needs to be done?\"\n        />\n        <input\n          className=\"submit-todo-btn btn\"\n          type=\"submit\"\n          value=\"submit\"\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default SubmitBtn;\n","import React, {useState} from 'react';\nimport TodoList from './components/TodoList';\nimport NewTodoSection from './components/NewTodoSection';\n\n\nconst TodoApp = _ => {\n  const [todoItem, setTodoItem] = useState({\n    todo : '',\n    completed: false\n  });\n  var myLocalStorageItems = JSON.parse(localStorage.getItem(\"myTodoListInLocalStorage\"));\n  const [todoList, setTodoList] = useState( myLocalStorageItems || []);\n  const [error, setErrorState] = useState({\n    isThereError: false,\n    errorMsg: ''\n  });\n\n\n  React.useEffect(() => {\n    localStorage.setItem('myTodoListInLocalStorage', JSON.stringify(todoList));\n  }, [todoList]);\n\n\n  const completedTodoNum = todoList.filter((todoItem, index) => todoItem.completed).length;\n  const pendingTodoNum = todoList.length - completedTodoNum;\n  return (\n    <div className=\"todo-container\">\n      <h1 className=\"todo-title centered\"> Tasks </h1>\n      <NewTodoSection\n        todoItem={todoItem}\n        setTodoItem={setTodoItem}\n        setTodoList={setTodoList}\n        todoList={todoList}\n        setErrorState={setErrorState}\n      />\n      {error.isThereError && <span className=\"error-msg\">{error.errorMsg}</span>}\n       <TodoList\n        todoList={todoList}\n        setTodoList={setTodoList}\n      />\n      <div className=\"tracker\">\n        <p>Completed: {completedTodoNum}</p>\n        <p>Pending: {pendingTodoNum}</p>\n        <p>Total number of tasks in queue: {todoList.length}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './App';\nimport './index.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}